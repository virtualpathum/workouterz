plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    signingConfigs {
        release {
            storeFile file('/Users/yogyahewavidana/Documents/Development/7MinWorkout/releaseKey')
            storePassword "Mathakane@123"
            keyAlias 'Mathakane'
            keyPassword 'Mathakane@123'
        }
    }
    compileSdk 32

    defaultConfig {
        applicationId "com.lk.infinitx.workouterz"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }
   /* flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
        }
        full {
            dimension "version"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
        }
    }*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.2.0"
    }

}

dependencies {

    def kotlin_version = "1.8.0"
    def dagger_version = "2.42"
    def retrofit_version = "2.9.0"
    def gson_converter_version = "2.9.0"
    def lifecycle_version = "2.5.0"
    def work_version = "2.7.1"
    def room_version = "2.4.2"
    def coroutines_version = "1.6.3"
    def glide_version = "4.13.0"
    def okhttp_login_interceptor_version = "4.10.0"
    def arch_version = "2.1.0"
    def nav_version = "2.5.0"
    //def compose_version = '1.3.0-alpha01'

    implementation 'androidx.compose.compiler:compiler:1.2.0'

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt("com.google.dagger:dagger-compiler:$dagger_version")
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    //GSON Converter
    implementation "com.google.code.gson:gson:$gson_converter_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"
    //OKHTTP Login Interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_login_interceptor_version")
    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt("com.github.bumptech.glide:compiler:$glide_version")
    //Work
    implementation "androidx.work:work-runtime-ktx:$work_version"
    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"
    //Recycler View
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    implementation "androidx.core:core-ktx:$kotlin_version"
    implementation "androidx.activity:activity-ktx:1.6.0-alpha05"

    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-compiler:2.42'
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")

    // To use android test orchestrator
    androidTestUtil "androidx.test:orchestrator:1.4.1"

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "androidx.test:core:1.4.0"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'org.robolectric:robolectric:4.8'
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.3'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test:core-ktx:1.4.0"

    // To use the androidx.test.espresso
    // androidTestImplementation "androidx.test:espresso:espresso-core:3.4.0"

    // To use the JUnit Extension APIs
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    // Kotlin extensions for androidx.test.ext.junit
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"

    // To use the Truth Extension APIs
    androidTestImplementation "androidx.test.ext:truth:1.4.0"

    // To use the androidx.test.runner APIs
    androidTestImplementation "androidx.test:runner:1.4.0"

    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    implementation 'androidx.activity:activity-compose:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation project (':analytics')
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

